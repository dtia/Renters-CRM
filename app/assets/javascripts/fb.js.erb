var locations = {};

window.fbAsyncInit = function() {
  FB.init({
    appId      : <%= Settings.app_id %>, // App ID
    status     : true, // check login status
    cookie     : true, // enable cookies to allow the server to access the session
    xfbml      : true  // parse XFBML
  });
};

// Load the SDK Asynchronously
(function(d){
   var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement('script'); js.id = id; js.async = true;
   js.src = "//connect.facebook.net/en_US/all.js";
   ref.parentNode.insertBefore(js, ref);
 }(document));

function checkFBLoginAndSubmitForm(formName) {
	// send user id
	FB.getLoginStatus(function(response) {
	  if (response.status === 'connected') {
	    	var uid = response.authResponse.userID;
			var accessToken = response.authResponse.accessToken;
			$('#uid').val(uid);
			console.log('user connected');
		} 
		else {
			console.log('user not authorized');
			FB.login(function(response) {
				if (response.authResponse) {
					var uid = response.authResponse.userID;
					var accessToken = response.authResponse.accessToken;

					// set user id of hidden field
					$('#uid').val(uid);
				} else {
					console.log('User cancelled login or did not fully authorize.');
				}
			});
		}
		document.forms[formName].submit();
	});
}

function checkFBLogin(formName) {
	FB.getLoginStatus(function(response) {
	  if (response.status !== 'connected') {
			console.log('user not authorized');
			FB.login(function(response) {
				if (response.authResponse) {
					var uid = response.authResponse.userID;
					var accessToken = response.authResponse.accessToken;

					// set user id of hidden field
					$('#uid').val(uid);
				} else {
					console.log('User cancelled login or did not fully authorize.');
				}

				document.forms[formName].submit();
			});
		}
	});
}

function sendFBId() {
	console.log('enter send fb id');
	// send user id
	FB.getLoginStatus(function(response) {
		if (response.status === 'connected') {
			postfbID(response);
		} 
		else {
			console.log('user not authorized');
			FB.login(function(response) {
				if (response.authResponse) {
					postfbID(response);
				} else {
					console.log('User cancelled login or did not fully authorize.');
				}
			});
		}
	});	
}

function postfbID(response) {
	var uid = response.authResponse.userID;
	var accessToken = response.authResponse.accessToken;
	console.log('postin fb id');
	$.get("/property", { fbid: uid });
}

var uid = '';
function getUserData(loginStatusResponse) {

	var access_token = loginStatusResponse.authResponse.accessToken;
	var query = 'SELECT uid, name, sex, meeting_sex, pic_square FROM user WHERE uid=me()';
	var url = encodeURI('https://graph.facebook.com/fql?q=' + query + '&access_token=' + access_token);

	$.get(url).complete(function(resp) { 
		data = JSON.parse(resp.responseText).data;
	
		var userInfo = {};
		for (var i=0; i < data.length; i++) {
			uid = data[i].uid;
			name = data[i].name;
			pic = data[i].pic_square;
			sex = data[i].sex;
			meeting_sex = data[i].meeting_sex;

			userInfo.uid = uid;
			userInfo.name = name;
			userInfo.pic = pic;
			userInfo.sex = sex;
			userInfo.meeting_sex = meeting_sex;
			setUserInfoOnFields(userInfo);
		}
	});
}

function sendUserId(url) {
	$("#my_meals").attr("href", "/home/search_my_meals?user_id=" + uid);	
}

function setUserInfoOnFields(userInfo) {
	$('#gender option[value="' + userInfo.sex + '"]').attr('selected', true);
    
    $('#gender_target option[value="' + userInfo.meeting_sex + '"]').attr('selected', true);
    
	$("#uid").val(userInfo.uid);
	$("#name").val(userInfo.name);
}

function hideLoginButton() {
	$("#login-button-box").remove();
}